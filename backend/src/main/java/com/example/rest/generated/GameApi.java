/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.rest.generated;

import com.example.rest.generated.model.GameSession;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;

import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-05-05T09:28:02.133219652+02:00[Europe/Zurich]", comments = "Generator version: 7.13.0")
@Validated
@Tag(name = "Game", description = "the Game API")
public interface GameApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /game/create : Create a game session
     *
     * @return Game created (status code 200)
     */
    @Operation(
        operationId = "createGame",
        summary = "Create a game session",
        tags = { "Game" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Game created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GameSession.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/game/create",
        produces = { "application/json" }
    )
    
    default ResponseEntity<GameSession> createGame(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"phase\" : \"phase\", \"currentDrawer\" : { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"keycloakId\" : \"keycloakId\", \"gameWebSocketSessionId\" : \"gameWebSocketSessionId\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"email\" : \"email\", \"username\" : \"username\", \"aboutMe\" : \"aboutMe\" }, \"currentWord\" : \"currentWord\", \"timerSeconds\" : 6, \"submittedWords\" : { \"key\" : \"submittedWords\" }, \"drawingOrder\" : [ { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"keycloakId\" : \"keycloakId\", \"gameWebSocketSessionId\" : \"gameWebSocketSessionId\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"email\" : \"email\", \"username\" : \"username\", \"aboutMe\" : \"aboutMe\" }, { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"keycloakId\" : \"keycloakId\", \"gameWebSocketSessionId\" : \"gameWebSocketSessionId\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"email\" : \"email\", \"username\" : \"username\", \"aboutMe\" : \"aboutMe\" } ], \"readyStatus\" : { \"key\" : true }, \"roomId\" : \"roomId\", \"users\" : [ { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"keycloakId\" : \"keycloakId\", \"gameWebSocketSessionId\" : \"gameWebSocketSessionId\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"email\" : \"email\", \"username\" : \"username\", \"aboutMe\" : \"aboutMe\" }, { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"keycloakId\" : \"keycloakId\", \"gameWebSocketSessionId\" : \"gameWebSocketSessionId\", \"id\" : \"046b6c7f-0b8a-43b9-b35d-6489e6daee91\", \"email\" : \"email\", \"username\" : \"username\", \"aboutMe\" : \"aboutMe\" } ], \"currentDrawerIndex\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /game/{roomId}/join : Join a game session
     *
     * @param roomId  (required)
     * @return Joined (status code 200)
     */
    @Operation(
        operationId = "joinGame",
        summary = "Join a game session",
        tags = { "Game" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Joined")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/game/{roomId}/join"
    )
    
    default ResponseEntity<Void> joinGame(
        @Parameter(name = "roomId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("roomId") String roomId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /game/{roomId}/submit-word : Submit a word
     *
     * @param roomId  (required)
     * @param body  (required)
     * @return Word submitted (status code 200)
     */
    @Operation(
        operationId = "submitWord",
        summary = "Submit a word",
        tags = { "Game" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Word submitted")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/game/{roomId}/submit-word",
        consumes = { "text/plain" }
    )
    
    default ResponseEntity<Void> submitWord(
        @Parameter(name = "roomId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("roomId") String roomId,
        @Parameter(name = "body", description = "", required = true) @Valid @RequestBody String body
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /game/{roomId}/ready : Toggle ready status
     *
     * @param roomId  (required)
     * @return Toggled (status code 200)
     */
    @Operation(
        operationId = "toggleReady",
        summary = "Toggle ready status",
        tags = { "Game" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Toggled")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/game/{roomId}/ready"
    )
    
    default ResponseEntity<Void> toggleReady(
        @Parameter(name = "roomId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("roomId") String roomId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
